{
    "variable": {
        "app": {
            "description": "Short application name to use as component names prefix (e.g. myapp)"
        },
        "env": {
            "default": "all",
            "description": "Optional environment tag to assign to instances"
        },
        "region": {
            "default": "us-east-1",
            "description": "AWS region where the instance should be created"
        },
        "availability_zones": {
            "description": "AWS availability zone, where data volume should be created",
            "type": "list"
        },
        "subnets": {
            "description": "AWS VPC subnet ID where the instance should be created",
            "type": "list"
        },
        "cluster_name": {
            "description": "AWS ECS cluster name where the instance should be registered"
        },
        "instance_name": {
            "description": "Optional instance name",
            "default": ""
        },
        "instance_type": {
            "default": "t2.micro"
        },
        "copies": {
            "description": "Number of instances to create",
            "default": 1
        },
        "key_name": {
            "default": ""
        },
        "iam_instance_profile": {
            "description": "Instance profile to associate with EC2 instance"
        },
        "route53_zone_id": {
            "description": "Route 53 zone ID to create a DNS record in"
        },
        "hostname": {
            "description": "An optional hostname to assign to the instance; must be within the route53_zone domain",
            "default": ""
        },
        "ecs_optimized_amis": {
            "default": {
                "us-east-1": "ami-5e414e24",
                "us-east-2": "ami-67ab9e02",
                "us-west-1": "ami-00898660",
                "us-west-2": "ami-10ed6968"
            }
        },
        "vpc_security_group_ids": {
            "description": "Coma-separated list of AWS SG ID's"
        },
        "associate_public_ip_address": {
            "default": false
        },
        "disable_api_termination": {
            "default": false
        },
        "volume_data_size": {
            "description": "Size of the /ecs volume in Gigabytes",
            "default": 0
        },
        "volume_data_terminate": {
            "description": "Whether to delete the /ecs volume on instance termination",
            "default": true
        },
        "volume_data_type": {
            "description": "Type of the /ecs volume (\"gp2\", \"io1\" or \"standard\")",
            "default": "gp2"
        },
        "volume_docker_type": {
            "description": "Type of the volume for docker containers (\"gp2\", \"io1\" or \"standard\")",
            "default": "gp2"
        }
    },
    "data": {
        "template_file": {
            "init_script": {
                "template": "${file(\"${path.module}/etc/init_script.sh\")}",
                "vars": {
                    "cluster_name": "${var.cluster_name}"
                }
            }
        }
    },
    "resource": {
        "aws_instance": {
            "default": {
                "count": "${var.copies}",
                "tags": {
                    "Name": "${coalesce(var.instance_name, \"${var.cluster_name}-${count.index}\")}",
                    "Application": "${var.app}",
                    "Environment": "${var.env}"
                },
                "subnet_id": "${element(var.subnets, count.index)}",
                "key_name": "${var.key_name}",
                "instance_type": "${var.instance_type}",
                "ami": "${lookup(var.ecs_optimized_amis, var.region)}",
                "associate_public_ip_address": "${var.associate_public_ip_address}",
                "disable_api_termination": "${var.disable_api_termination}",
                "iam_instance_profile": "${var.iam_instance_profile}",
                "vpc_security_group_ids": [
                    "${split(\",\", var.vpc_security_group_ids)}"
                ],
                "user_data": "${data.template_file.init_script.rendered}"
            }
        },
        "aws_ebs_volume": {
            "data_volume": {
                "count": "${var.volume_data_size > 0 ? var.copies : 0}",
                "lifecycle": {
                    "prevent_destroy": true
                },
                "availability_zone": "${element(var.availability_zones, count.index)}",
                "type": "${var.volume_data_type}",
                "size": "${var.volume_data_size}",
                "tags": {
                    "Name": "${coalesce(var.instance_name, \"${var.cluster_name}-${count.index}\")}-data",
                    "Application": "${var.app}",
                    "Environment": "${var.env}"
                }
            }
        },
        "aws_volume_attachment": {
            "data_volume": {
                "count": "${var.volume_data_size > 0 ? var.copies : 0}",
                "device_name": "/dev/xvdb",
                "instance_id": "${element(aws_instance.default.*.id, count.index)}",
                "volume_id": "${element(aws_ebs_volume.data_volume.*.id, count.index)}"
            }
        },
        "aws_route53_record": {
            "default": {
                "count": "${var.copies}",
                "zone_id": "${var.route53_zone_id}",
                "name": "${coalesce(var.hostname, replace(\"${var.cluster_name}-${count.index}.${var.app}.local\", \"${var.app}-\", \"\"))}",
                "type": "A",
                "ttl": "300",
                "records": [
                    "${element(aws_instance.default.*.private_ip, count.index)}"
                ]
            }
        }
    },
    "output": {
        "id": {
            "value": "${aws_instance.default.id}"
        },
        "ids": {
            "value": "${aws_instance.default.*.id}"
        },
        "public_ip": {
            "value": "${aws_instance.default.public_ip}"
        },
        "public_ips": {
            "value": "${aws_instance.default.*.public_ip}"
        },
        "private_ip": {
            "value": "${aws_instance.default.private_ip}"
        },
        "private_ips": {
            "value": "${aws_instance.default.*.private_ip}"
        },
        "hostname": {
            "value": "${aws_route53_record.default.name}"
        },
        "hostnames": {
            "value": "${aws_route53_record.default.*.name}"
        }
    }
}